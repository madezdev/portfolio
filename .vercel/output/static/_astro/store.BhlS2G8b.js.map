{"version":3,"file":"store.BhlS2G8b.js","sources":["../../node_modules/nanostores/atom/index.js","../../src/i18n/store.ts"],"sourcesContent":["import { clean } from '../clean-stores/index.js'\n\nlet listenerQueue = []\nlet lqIndex = 0\nconst QUEUE_ITEMS_PER_LISTENER = 4\nexport let epoch = 0\n\nexport let atom = initialValue => {\n  let listeners = []\n  let $atom = {\n    get() {\n      if (!$atom.lc) {\n        $atom.listen(() => {})()\n      }\n      return $atom.value\n    },\n    lc: 0,\n    listen(listener) {\n      $atom.lc = listeners.push(listener)\n\n      return () => {\n        for (\n          let i = lqIndex + QUEUE_ITEMS_PER_LISTENER;\n          i < listenerQueue.length;\n\n        ) {\n          if (listenerQueue[i] === listener) {\n            listenerQueue.splice(i, QUEUE_ITEMS_PER_LISTENER)\n          } else {\n            i += QUEUE_ITEMS_PER_LISTENER\n          }\n        }\n\n        let index = listeners.indexOf(listener)\n        if (~index) {\n          listeners.splice(index, 1)\n          if (!--$atom.lc) $atom.off()\n        }\n      }\n    },\n    notify(oldValue, changedKey) {\n      epoch++\n      let runListenerQueue = !listenerQueue.length\n      for (let listener of listeners) {\n        listenerQueue.push(listener, $atom.value, oldValue, changedKey)\n      }\n\n      if (runListenerQueue) {\n        for (\n          lqIndex = 0;\n          lqIndex < listenerQueue.length;\n          lqIndex += QUEUE_ITEMS_PER_LISTENER\n        ) {\n          listenerQueue[lqIndex](\n            listenerQueue[lqIndex + 1],\n            listenerQueue[lqIndex + 2],\n            listenerQueue[lqIndex + 3]\n          )\n        }\n        listenerQueue.length = 0\n      }\n    },\n    /* It will be called on last listener unsubscribing.\n       We will redefine it in onMount and onStop. */\n    off() {},\n    set(newValue) {\n      let oldValue = $atom.value\n      if (oldValue !== newValue) {\n        $atom.value = newValue\n        $atom.notify(oldValue)\n      }\n    },\n    subscribe(listener) {\n      let unbind = $atom.listen(listener)\n      listener($atom.value)\n      return unbind\n    },\n    value: initialValue\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    $atom[clean] = () => {\n      listeners = []\n      $atom.lc = 0\n      $atom.off()\n    }\n  }\n\n  return $atom\n}\n\nexport const readonlyType = store => store\n","import { atom } from 'nanostores';\nimport type { Language } from './translations';\n\n// Get initial language from localStorage or default to Spanish\nconst getInitialLanguage = (): Language => {\n  if (typeof window !== 'undefined') {\n    const stored = localStorage.getItem('portfolio-language');\n    if (stored === 'en' || stored === 'es') {\n      return stored;\n    }\n    // Detect browser language\n    const browserLang = navigator.language.toLowerCase();\n    return browserLang.startsWith('en') ? 'en' : 'es';\n  }\n  return 'es'; // Default to Spanish for SSR\n};\n\nexport const currentLanguage = atom<Language>(getInitialLanguage());\n\n// Save language preference to localStorage when it changes\ncurrentLanguage.subscribe((lang) => {\n  if (typeof window !== 'undefined') {\n    localStorage.setItem('portfolio-language', lang);\n    document.documentElement.lang = lang;\n  }\n});\n\nexport const toggleLanguage = () => {\n  const current = currentLanguage.get();\n  currentLanguage.set(current === 'es' ? 'en' : 'es');\n};"],"names":["listenerQueue","lqIndex","QUEUE_ITEMS_PER_LISTENER","atom","initialValue","listeners","$atom","listener","i","index","oldValue","changedKey","runListenerQueue","newValue","unbind","getInitialLanguage","stored","currentLanguage","lang","toggleLanguage","current"],"mappings":"AAEA,IAAIA,EAAgB,CAAA,EAChBC,EAAU,EACd,MAAMC,EAA2B,EAG1B,IAAIC,EAAOC,GAAgB,CAChC,IAAIC,EAAY,CAAA,EACZC,EAAQ,CACV,KAAM,CACJ,OAAKA,EAAM,IACTA,EAAM,OAAO,IAAM,CAAC,CAAC,EAAA,EAEhBA,EAAM,KACf,EACA,GAAI,EACJ,OAAOC,EAAU,CACf,OAAAD,EAAM,GAAKD,EAAU,KAAKE,CAAQ,EAE3B,IAAM,CACX,QACMC,EAAIP,EAAUC,EAClBM,EAAIR,EAAc,QAGdA,EAAcQ,CAAC,IAAMD,EACvBP,EAAc,OAAOQ,EAAGN,CAAwB,EAEhDM,GAAKN,EAIT,IAAIO,EAAQJ,EAAU,QAAQE,CAAQ,EAClC,CAACE,IACHJ,EAAU,OAAOI,EAAO,CAAC,EACpB,EAAEH,EAAM,MAAU,IAAA,EAE3B,CACF,EACA,OAAOI,EAAUC,EAAY,CAE3B,IAAIC,EAAmB,CAACZ,EAAc,OACtC,QAASO,KAAYF,EACnBL,EAAc,KAAKO,EAAUD,EAAM,MAAOI,EAAUC,CAAU,EAGhE,GAAIC,EAAkB,CACpB,IACEX,EAAU,EACVA,EAAUD,EAAc,OACxBC,GAAWC,EAEXF,EAAcC,CAAO,EACnBD,EAAcC,EAAU,CAAC,EACzBD,EAAcC,EAAU,CAAC,EACzBD,EAAcC,EAAU,CAAC,CAAA,EAG7BD,EAAc,OAAS,CACzB,CACF,EAGA,KAAM,CAAC,EACP,IAAIa,EAAU,CACZ,IAAIH,EAAWJ,EAAM,MACjBI,IAAaG,IACfP,EAAM,MAAQO,EACdP,EAAM,OAAOI,CAAQ,EAEzB,EACA,UAAUH,EAAU,CAClB,IAAIO,EAASR,EAAM,OAAOC,CAAQ,EAClC,OAAAA,EAASD,EAAM,KAAK,EACbQ,CACT,EACA,MAAOV,CAAA,EAWT,OAAOE,CACT,ECrFA,MAAMS,EAAqB,IAAgB,CACzC,GAAI,OAAO,OAAW,IAAa,CACjC,MAAMC,EAAS,aAAa,QAAQ,oBAAoB,EACxD,OAAIA,IAAW,MAAQA,IAAW,KACzBA,EAGW,UAAU,SAAS,YAAA,EACpB,WAAW,IAAI,EAAI,KAAO,IAC/C,CACA,MAAO,IACT,EAEaC,EAAkBd,EAAeY,EAAA,CAAoB,EAGlEE,EAAgB,UAAWC,GAAS,CAC9B,OAAO,OAAW,MACpB,aAAa,QAAQ,qBAAsBA,CAAI,EAC/C,SAAS,gBAAgB,KAAOA,EAEpC,CAAC,EAEM,MAAMC,EAAiB,IAAM,CAClC,MAAMC,EAAUH,EAAgB,IAAA,EAChCA,EAAgB,IAAIG,IAAY,KAAO,KAAO,IAAI,CACpD","x_google_ignoreList":[0]}