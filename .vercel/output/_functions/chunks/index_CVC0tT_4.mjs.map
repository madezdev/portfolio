{"version":3,"file":"index_CVC0tT_4.mjs","sources":["../../../node_modules/@astrojs/internal-helpers/dist/path.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/utils.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/bmp.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/ico.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/cur.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/dds.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/gif.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/heif.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/icns.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/j2c.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/jp2.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/jpg.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/ktx.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/png.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/pnm.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/psd.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/svg.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/tga.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/tiff.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/webp.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/types/index.js"],"sourcesContent":["function appendExtension(path, extension) {\n  return path + \".\" + extension;\n}\nfunction appendForwardSlash(path) {\n  return path.endsWith(\"/\") ? path : path + \"/\";\n}\nfunction prependForwardSlash(path) {\n  return path[0] === \"/\" ? path : \"/\" + path;\n}\nfunction collapseDuplicateSlashes(path) {\n  return path.replace(/(?<!:)\\/{2,}/g, \"/\");\n}\nconst MANY_TRAILING_SLASHES = /\\/{2,}$/g;\nfunction collapseDuplicateTrailingSlashes(path, trailingSlash) {\n  if (!path) {\n    return path;\n  }\n  return path.replace(MANY_TRAILING_SLASHES, trailingSlash ? \"/\" : \"\") || \"/\";\n}\nfunction removeTrailingForwardSlash(path) {\n  return path.endsWith(\"/\") ? path.slice(0, path.length - 1) : path;\n}\nfunction removeLeadingForwardSlash(path) {\n  return path.startsWith(\"/\") ? path.substring(1) : path;\n}\nfunction removeLeadingForwardSlashWindows(path) {\n  return path.startsWith(\"/\") && path[2] === \":\" ? path.substring(1) : path;\n}\nfunction trimSlashes(path) {\n  return path.replace(/^\\/|\\/$/g, \"\");\n}\nfunction startsWithForwardSlash(path) {\n  return path[0] === \"/\";\n}\nfunction startsWithDotDotSlash(path) {\n  const c1 = path[0];\n  const c2 = path[1];\n  const c3 = path[2];\n  return c1 === \".\" && c2 === \".\" && c3 === \"/\";\n}\nfunction startsWithDotSlash(path) {\n  const c1 = path[0];\n  const c2 = path[1];\n  return c1 === \".\" && c2 === \"/\";\n}\nfunction isRelativePath(path) {\n  return startsWithDotDotSlash(path) || startsWithDotSlash(path);\n}\nfunction isString(path) {\n  return typeof path === \"string\" || path instanceof String;\n}\nconst INTERNAL_PREFIXES = /* @__PURE__ */ new Set([\"/_\", \"/@\", \"/.\", \"//\"]);\nconst JUST_SLASHES = /^\\/{2,}$/;\nfunction isInternalPath(path) {\n  return INTERNAL_PREFIXES.has(path.slice(0, 2)) && !JUST_SLASHES.test(path);\n}\nfunction joinPaths(...paths) {\n  return paths.filter(isString).map((path, i) => {\n    if (i === 0) {\n      return removeTrailingForwardSlash(path);\n    } else if (i === paths.length - 1) {\n      return removeLeadingForwardSlash(path);\n    } else {\n      return trimSlashes(path);\n    }\n  }).join(\"/\");\n}\nfunction removeFileExtension(path) {\n  let idx = path.lastIndexOf(\".\");\n  return idx === -1 ? path : path.slice(0, idx);\n}\nfunction removeQueryString(path) {\n  const index = path.lastIndexOf(\"?\");\n  return index > 0 ? path.substring(0, index) : path;\n}\nfunction isRemotePath(src) {\n  return /^(?:http|ftp|https|ws):?\\/\\//.test(src) || src.startsWith(\"data:\");\n}\nfunction slash(path) {\n  return path.replace(/\\\\/g, \"/\");\n}\nfunction fileExtension(path) {\n  const ext = path.split(\".\").pop();\n  return ext !== path ? `.${ext}` : \"\";\n}\nfunction removeBase(path, base) {\n  if (path.startsWith(base)) {\n    return path.slice(removeTrailingForwardSlash(base).length);\n  }\n  return path;\n}\nconst WITH_FILE_EXT = /\\/[^/]+\\.\\w+$/;\nfunction hasFileExtension(path) {\n  return WITH_FILE_EXT.test(path);\n}\nexport {\n  MANY_TRAILING_SLASHES,\n  appendExtension,\n  appendForwardSlash,\n  collapseDuplicateSlashes,\n  collapseDuplicateTrailingSlashes,\n  fileExtension,\n  hasFileExtension,\n  isInternalPath,\n  isRelativePath,\n  isRemotePath,\n  joinPaths,\n  prependForwardSlash,\n  removeBase,\n  removeFileExtension,\n  removeLeadingForwardSlash,\n  removeLeadingForwardSlashWindows,\n  removeQueryString,\n  removeTrailingForwardSlash,\n  slash,\n  startsWithDotDotSlash,\n  startsWithDotSlash,\n  startsWithForwardSlash,\n  trimSlashes\n};\n","const decoder = new TextDecoder();\nconst toUTF8String = (input, start = 0, end = input.length) => decoder.decode(input.slice(start, end));\nconst toHexString = (input, start = 0, end = input.length) => input.slice(start, end).reduce((memo, i) => memo + (\"0\" + i.toString(16)).slice(-2), \"\");\nconst readInt16LE = (input, offset = 0) => {\n  const val = input[offset] + input[offset + 1] * 2 ** 8;\n  return val | (val & 2 ** 15) * 131070;\n};\nconst readUInt16BE = (input, offset = 0) => input[offset] * 2 ** 8 + input[offset + 1];\nconst readUInt16LE = (input, offset = 0) => input[offset] + input[offset + 1] * 2 ** 8;\nconst readUInt24LE = (input, offset = 0) => input[offset] + input[offset + 1] * 2 ** 8 + input[offset + 2] * 2 ** 16;\nconst readInt32LE = (input, offset = 0) => input[offset] + input[offset + 1] * 2 ** 8 + input[offset + 2] * 2 ** 16 + (input[offset + 3] << 24);\nconst readUInt32BE = (input, offset = 0) => input[offset] * 2 ** 24 + input[offset + 1] * 2 ** 16 + input[offset + 2] * 2 ** 8 + input[offset + 3];\nconst readUInt32LE = (input, offset = 0) => input[offset] + input[offset + 1] * 2 ** 8 + input[offset + 2] * 2 ** 16 + input[offset + 3] * 2 ** 24;\nconst methods = {\n  readUInt16BE,\n  readUInt16LE,\n  readUInt32BE,\n  readUInt32LE\n};\nfunction readUInt(input, bits, offset, isBigEndian) {\n  offset = offset || 0;\n  const endian = isBigEndian ? \"BE\" : \"LE\";\n  const methodName = \"readUInt\" + bits + endian;\n  return methods[methodName](input, offset);\n}\nfunction readBox(buffer, offset) {\n  if (buffer.length - offset < 4) return;\n  const boxSize = readUInt32BE(buffer, offset);\n  if (buffer.length - offset < boxSize) return;\n  return {\n    name: toUTF8String(buffer, 4 + offset, 8 + offset),\n    offset,\n    size: boxSize\n  };\n}\nfunction findBox(buffer, boxName, offset) {\n  while (offset < buffer.length) {\n    const box = readBox(buffer, offset);\n    if (!box) break;\n    if (box.name === boxName) return box;\n    offset += box.size;\n  }\n}\nexport {\n  findBox,\n  readInt16LE,\n  readInt32LE,\n  readUInt,\n  readUInt16BE,\n  readUInt16LE,\n  readUInt24LE,\n  readUInt32BE,\n  readUInt32LE,\n  toHexString,\n  toUTF8String\n};\n","import { toUTF8String, readInt32LE, readUInt32LE } from \"./utils.js\";\nconst BMP = {\n  validate: (input) => toUTF8String(input, 0, 2) === \"BM\",\n  calculate: (input) => ({\n    height: Math.abs(readInt32LE(input, 22)),\n    width: readUInt32LE(input, 18)\n  })\n};\nexport {\n  BMP\n};\n","import { readUInt16LE } from \"./utils.js\";\nconst TYPE_ICON = 1;\nconst SIZE_HEADER = 2 + 2 + 2;\nconst SIZE_IMAGE_ENTRY = 1 + 1 + 1 + 1 + 2 + 2 + 4 + 4;\nfunction getSizeFromOffset(input, offset) {\n  const value = input[offset];\n  return value === 0 ? 256 : value;\n}\nfunction getImageSize(input, imageIndex) {\n  const offset = SIZE_HEADER + imageIndex * SIZE_IMAGE_ENTRY;\n  return {\n    height: getSizeFromOffset(input, offset + 1),\n    width: getSizeFromOffset(input, offset)\n  };\n}\nconst ICO = {\n  validate(input) {\n    const reserved = readUInt16LE(input, 0);\n    const imageCount = readUInt16LE(input, 4);\n    if (reserved !== 0 || imageCount === 0) return false;\n    const imageType = readUInt16LE(input, 2);\n    return imageType === TYPE_ICON;\n  },\n  calculate(input) {\n    const nbImages = readUInt16LE(input, 4);\n    const imageSize = getImageSize(input, 0);\n    if (nbImages === 1) return imageSize;\n    const imgs = [imageSize];\n    for (let imageIndex = 1; imageIndex < nbImages; imageIndex += 1) {\n      imgs.push(getImageSize(input, imageIndex));\n    }\n    return {\n      height: imageSize.height,\n      images: imgs,\n      width: imageSize.width\n    };\n  }\n};\nexport {\n  ICO\n};\n","import { ICO } from \"./ico.js\";\nimport { readUInt16LE } from \"./utils.js\";\nconst TYPE_CURSOR = 2;\nconst CUR = {\n  validate(input) {\n    const reserved = readUInt16LE(input, 0);\n    const imageCount = readUInt16LE(input, 4);\n    if (reserved !== 0 || imageCount === 0) return false;\n    const imageType = readUInt16LE(input, 2);\n    return imageType === TYPE_CURSOR;\n  },\n  calculate: (input) => ICO.calculate(input)\n};\nexport {\n  CUR\n};\n","import { readUInt32LE } from \"./utils.js\";\nconst DDS = {\n  validate: (input) => readUInt32LE(input, 0) === 542327876,\n  calculate: (input) => ({\n    height: readUInt32LE(input, 12),\n    width: readUInt32LE(input, 16)\n  })\n};\nexport {\n  DDS\n};\n","import { toUTF8String, readUInt16LE } from \"./utils.js\";\nconst gifRegexp = /^GIF8[79]a/;\nconst GIF = {\n  validate: (input) => gifRegexp.test(toUTF8String(input, 0, 6)),\n  calculate: (input) => ({\n    height: readUInt16LE(input, 8),\n    width: readUInt16LE(input, 6)\n  })\n};\nexport {\n  GIF\n};\n","import { findBox, readUInt32BE, toUTF8String } from \"./utils.js\";\nconst brandMap = {\n  avif: \"avif\",\n  avis: \"avif\",\n  // avif-sequence\n  mif1: \"heif\",\n  msf1: \"heif\",\n  // heif-sequence\n  heic: \"heic\",\n  heix: \"heic\",\n  hevc: \"heic\",\n  // heic-sequence\n  hevx: \"heic\"\n  // heic-sequence\n};\nfunction detectBrands(buffer, start, end) {\n  let brandsDetected = {};\n  for (let i = start; i <= end; i += 4) {\n    const brand = toUTF8String(buffer, i, i + 4);\n    if (brand in brandMap) {\n      brandsDetected[brand] = 1;\n    }\n  }\n  if (\"avif\" in brandsDetected || \"avis\" in brandsDetected) {\n    return \"avif\";\n  } else if (\"heic\" in brandsDetected || \"heix\" in brandsDetected || \"hevc\" in brandsDetected || \"hevx\" in brandsDetected) {\n    return \"heic\";\n  } else if (\"mif1\" in brandsDetected || \"msf1\" in brandsDetected) {\n    return \"heif\";\n  }\n}\nconst HEIF = {\n  validate(buffer) {\n    const ftype = toUTF8String(buffer, 4, 8);\n    const brand = toUTF8String(buffer, 8, 12);\n    return \"ftyp\" === ftype && brand in brandMap;\n  },\n  calculate(buffer) {\n    const metaBox = findBox(buffer, \"meta\", 0);\n    const iprpBox = metaBox && findBox(buffer, \"iprp\", metaBox.offset + 12);\n    const ipcoBox = iprpBox && findBox(buffer, \"ipco\", iprpBox.offset + 8);\n    const ispeBox = ipcoBox && findBox(buffer, \"ispe\", ipcoBox.offset + 8);\n    if (ispeBox) {\n      return {\n        height: readUInt32BE(buffer, ispeBox.offset + 16),\n        width: readUInt32BE(buffer, ispeBox.offset + 12),\n        type: detectBrands(buffer, 8, metaBox.offset)\n      };\n    }\n    throw new TypeError(\"Invalid HEIF, no size found\");\n  }\n};\nexport {\n  HEIF\n};\n","import { toUTF8String, readUInt32BE } from \"./utils.js\";\nconst SIZE_HEADER = 4 + 4;\nconst FILE_LENGTH_OFFSET = 4;\nconst ENTRY_LENGTH_OFFSET = 4;\nconst ICON_TYPE_SIZE = {\n  ICON: 32,\n  \"ICN#\": 32,\n  // m => 16 x 16\n  \"icm#\": 16,\n  icm4: 16,\n  icm8: 16,\n  // s => 16 x 16\n  \"ics#\": 16,\n  ics4: 16,\n  ics8: 16,\n  is32: 16,\n  s8mk: 16,\n  icp4: 16,\n  // l => 32 x 32\n  icl4: 32,\n  icl8: 32,\n  il32: 32,\n  l8mk: 32,\n  icp5: 32,\n  ic11: 32,\n  // h => 48 x 48\n  ich4: 48,\n  ich8: 48,\n  ih32: 48,\n  h8mk: 48,\n  // . => 64 x 64\n  icp6: 64,\n  ic12: 32,\n  // t => 128 x 128\n  it32: 128,\n  t8mk: 128,\n  ic07: 128,\n  // . => 256 x 256\n  ic08: 256,\n  ic13: 256,\n  // . => 512 x 512\n  ic09: 512,\n  ic14: 512,\n  // . => 1024 x 1024\n  ic10: 1024\n};\nfunction readImageHeader(input, imageOffset) {\n  const imageLengthOffset = imageOffset + ENTRY_LENGTH_OFFSET;\n  return [\n    toUTF8String(input, imageOffset, imageLengthOffset),\n    readUInt32BE(input, imageLengthOffset)\n  ];\n}\nfunction getImageSize(type) {\n  const size = ICON_TYPE_SIZE[type];\n  return { width: size, height: size, type };\n}\nconst ICNS = {\n  validate: (input) => toUTF8String(input, 0, 4) === \"icns\",\n  calculate(input) {\n    const inputLength = input.length;\n    const fileLength = readUInt32BE(input, FILE_LENGTH_OFFSET);\n    let imageOffset = SIZE_HEADER;\n    let imageHeader = readImageHeader(input, imageOffset);\n    let imageSize = getImageSize(imageHeader[0]);\n    imageOffset += imageHeader[1];\n    if (imageOffset === fileLength) return imageSize;\n    const result = {\n      height: imageSize.height,\n      images: [imageSize],\n      width: imageSize.width\n    };\n    while (imageOffset < fileLength && imageOffset < inputLength) {\n      imageHeader = readImageHeader(input, imageOffset);\n      imageSize = getImageSize(imageHeader[0]);\n      imageOffset += imageHeader[1];\n      result.images.push(imageSize);\n    }\n    return result;\n  }\n};\nexport {\n  ICNS\n};\n","import { toHexString, readUInt32BE } from \"./utils.js\";\nconst J2C = {\n  // TODO: this doesn't seem right. SIZ marker doesn't have to be right after the SOC\n  validate: (input) => toHexString(input, 0, 4) === \"ff4fff51\",\n  calculate: (input) => ({\n    height: readUInt32BE(input, 12),\n    width: readUInt32BE(input, 8)\n  })\n};\nexport {\n  J2C\n};\n","import { readUInt32BE, findBox } from \"./utils.js\";\nconst JP2 = {\n  validate(input) {\n    if (readUInt32BE(input, 4) !== 1783636e3 || readUInt32BE(input, 0) < 1) return false;\n    const ftypBox = findBox(input, \"ftyp\", 0);\n    if (!ftypBox) return false;\n    return readUInt32BE(input, ftypBox.offset + 4) === 1718909296;\n  },\n  calculate(input) {\n    const jp2hBox = findBox(input, \"jp2h\", 0);\n    const ihdrBox = jp2hBox && findBox(input, \"ihdr\", jp2hBox.offset + 8);\n    if (ihdrBox) {\n      return {\n        height: readUInt32BE(input, ihdrBox.offset + 8),\n        width: readUInt32BE(input, ihdrBox.offset + 12)\n      };\n    }\n    throw new TypeError(\"Unsupported JPEG 2000 format\");\n  }\n};\nexport {\n  JP2\n};\n","import { readUInt, readUInt16BE, toHexString } from \"./utils.js\";\nconst EXIF_MARKER = \"45786966\";\nconst APP1_DATA_SIZE_BYTES = 2;\nconst EXIF_HEADER_BYTES = 6;\nconst TIFF_BYTE_ALIGN_BYTES = 2;\nconst BIG_ENDIAN_BYTE_ALIGN = \"4d4d\";\nconst LITTLE_ENDIAN_BYTE_ALIGN = \"4949\";\nconst IDF_ENTRY_BYTES = 12;\nconst NUM_DIRECTORY_ENTRIES_BYTES = 2;\nfunction isEXIF(input) {\n  return toHexString(input, 2, 6) === EXIF_MARKER;\n}\nfunction extractSize(input, index) {\n  return {\n    height: readUInt16BE(input, index),\n    width: readUInt16BE(input, index + 2)\n  };\n}\nfunction extractOrientation(exifBlock, isBigEndian) {\n  const idfOffset = 8;\n  const offset = EXIF_HEADER_BYTES + idfOffset;\n  const idfDirectoryEntries = readUInt(exifBlock, 16, offset, isBigEndian);\n  for (let directoryEntryNumber = 0; directoryEntryNumber < idfDirectoryEntries; directoryEntryNumber++) {\n    const start = offset + NUM_DIRECTORY_ENTRIES_BYTES + directoryEntryNumber * IDF_ENTRY_BYTES;\n    const end = start + IDF_ENTRY_BYTES;\n    if (start > exifBlock.length) {\n      return;\n    }\n    const block = exifBlock.slice(start, end);\n    const tagNumber = readUInt(block, 16, 0, isBigEndian);\n    if (tagNumber === 274) {\n      const dataFormat = readUInt(block, 16, 2, isBigEndian);\n      if (dataFormat !== 3) {\n        return;\n      }\n      const numberOfComponents = readUInt(block, 32, 4, isBigEndian);\n      if (numberOfComponents !== 1) {\n        return;\n      }\n      return readUInt(block, 16, 8, isBigEndian);\n    }\n  }\n}\nfunction validateExifBlock(input, index) {\n  const exifBlock = input.slice(APP1_DATA_SIZE_BYTES, index);\n  const byteAlign = toHexString(\n    exifBlock,\n    EXIF_HEADER_BYTES,\n    EXIF_HEADER_BYTES + TIFF_BYTE_ALIGN_BYTES\n  );\n  const isBigEndian = byteAlign === BIG_ENDIAN_BYTE_ALIGN;\n  const isLittleEndian = byteAlign === LITTLE_ENDIAN_BYTE_ALIGN;\n  if (isBigEndian || isLittleEndian) {\n    return extractOrientation(exifBlock, isBigEndian);\n  }\n}\nfunction validateInput(input, index) {\n  if (index > input.length) {\n    throw new TypeError(\"Corrupt JPG, exceeded buffer limits\");\n  }\n}\nconst JPG = {\n  validate: (input) => toHexString(input, 0, 2) === \"ffd8\",\n  calculate(input) {\n    input = input.slice(4);\n    let orientation;\n    let next;\n    while (input.length) {\n      const i = readUInt16BE(input, 0);\n      if (input[i] !== 255) {\n        input = input.slice(i);\n        continue;\n      }\n      if (isEXIF(input)) {\n        orientation = validateExifBlock(input, i);\n      }\n      validateInput(input, i);\n      next = input[i + 1];\n      if (next === 192 || next === 193 || next === 194) {\n        const size = extractSize(input, i + 5);\n        if (!orientation) {\n          return size;\n        }\n        return {\n          height: size.height,\n          orientation,\n          width: size.width\n        };\n      }\n      input = input.slice(i + 2);\n    }\n    throw new TypeError(\"Invalid JPG, no size found\");\n  }\n};\nexport {\n  JPG\n};\n","import { toUTF8String, readUInt32LE } from \"./utils.js\";\nconst KTX = {\n  validate: (input) => {\n    const signature = toUTF8String(input, 1, 7);\n    return [\"KTX 11\", \"KTX 20\"].includes(signature);\n  },\n  calculate: (input) => {\n    const type = input[5] === 49 ? \"ktx\" : \"ktx2\";\n    const offset = type === \"ktx\" ? 36 : 20;\n    return {\n      height: readUInt32LE(input, offset + 4),\n      width: readUInt32LE(input, offset),\n      type\n    };\n  }\n};\nexport {\n  KTX\n};\n","import { toUTF8String, readUInt32BE } from \"./utils.js\";\nconst pngSignature = \"PNG\\r\\n\u001a\\n\";\nconst pngImageHeaderChunkName = \"IHDR\";\nconst pngFriedChunkName = \"CgBI\";\nconst PNG = {\n  validate(input) {\n    if (pngSignature === toUTF8String(input, 1, 8)) {\n      let chunkName = toUTF8String(input, 12, 16);\n      if (chunkName === pngFriedChunkName) {\n        chunkName = toUTF8String(input, 28, 32);\n      }\n      if (chunkName !== pngImageHeaderChunkName) {\n        throw new TypeError(\"Invalid PNG\");\n      }\n      return true;\n    }\n    return false;\n  },\n  calculate(input) {\n    if (toUTF8String(input, 12, 16) === pngFriedChunkName) {\n      return {\n        height: readUInt32BE(input, 36),\n        width: readUInt32BE(input, 32)\n      };\n    }\n    return {\n      height: readUInt32BE(input, 20),\n      width: readUInt32BE(input, 16)\n    };\n  }\n};\nexport {\n  PNG\n};\n","import { toUTF8String } from \"./utils.js\";\nconst PNMTypes = {\n  P1: \"pbm/ascii\",\n  P2: \"pgm/ascii\",\n  P3: \"ppm/ascii\",\n  P4: \"pbm\",\n  P5: \"pgm\",\n  P6: \"ppm\",\n  P7: \"pam\",\n  PF: \"pfm\"\n};\nconst handlers = {\n  default: (lines) => {\n    let dimensions = [];\n    while (lines.length > 0) {\n      const line = lines.shift();\n      if (line[0] === \"#\") {\n        continue;\n      }\n      dimensions = line.split(\" \");\n      break;\n    }\n    if (dimensions.length === 2) {\n      return {\n        height: parseInt(dimensions[1], 10),\n        width: parseInt(dimensions[0], 10)\n      };\n    } else {\n      throw new TypeError(\"Invalid PNM\");\n    }\n  },\n  pam: (lines) => {\n    const size = {};\n    while (lines.length > 0) {\n      const line = lines.shift();\n      if (line.length > 16 || line.charCodeAt(0) > 128) {\n        continue;\n      }\n      const [key, value] = line.split(\" \");\n      if (key && value) {\n        size[key.toLowerCase()] = parseInt(value, 10);\n      }\n      if (size.height && size.width) {\n        break;\n      }\n    }\n    if (size.height && size.width) {\n      return {\n        height: size.height,\n        width: size.width\n      };\n    } else {\n      throw new TypeError(\"Invalid PAM\");\n    }\n  }\n};\nconst PNM = {\n  validate: (input) => toUTF8String(input, 0, 2) in PNMTypes,\n  calculate(input) {\n    const signature = toUTF8String(input, 0, 2);\n    const type = PNMTypes[signature];\n    const lines = toUTF8String(input, 3).split(/[\\r\\n]+/);\n    const handler = handlers[type] || handlers.default;\n    return handler(lines);\n  }\n};\nexport {\n  PNM\n};\n","import { toUTF8String, readUInt32BE } from \"./utils.js\";\nconst PSD = {\n  validate: (input) => toUTF8String(input, 0, 4) === \"8BPS\",\n  calculate: (input) => ({\n    height: readUInt32BE(input, 14),\n    width: readUInt32BE(input, 18)\n  })\n};\nexport {\n  PSD\n};\n","import { toUTF8String } from \"./utils.js\";\nconst svgReg = /<svg\\s([^>\"']|\"[^\"]*\"|'[^']*')*>/;\nconst extractorRegExps = {\n  height: /\\sheight=(['\"])([^%]+?)\\1/,\n  root: svgReg,\n  viewbox: /\\sviewBox=(['\"])(.+?)\\1/i,\n  width: /\\swidth=(['\"])([^%]+?)\\1/\n};\nconst INCH_CM = 2.54;\nconst units = {\n  in: 96,\n  cm: 96 / INCH_CM,\n  em: 16,\n  ex: 8,\n  m: 96 / INCH_CM * 100,\n  mm: 96 / INCH_CM / 10,\n  pc: 96 / 72 / 12,\n  pt: 96 / 72,\n  px: 1\n};\nconst unitsReg = new RegExp(\n  `^([0-9.]+(?:e\\\\d+)?)(${Object.keys(units).join(\"|\")})?$`\n);\nfunction parseLength(len) {\n  const m = unitsReg.exec(len);\n  if (!m) {\n    return void 0;\n  }\n  return Math.round(Number(m[1]) * (units[m[2]] || 1));\n}\nfunction parseViewbox(viewbox) {\n  const bounds = viewbox.split(\" \");\n  return {\n    height: parseLength(bounds[3]),\n    width: parseLength(bounds[2])\n  };\n}\nfunction parseAttributes(root) {\n  const width = extractorRegExps.width.exec(root);\n  const height = extractorRegExps.height.exec(root);\n  const viewbox = extractorRegExps.viewbox.exec(root);\n  return {\n    height: height && parseLength(height[2]),\n    viewbox: viewbox && parseViewbox(viewbox[2]),\n    width: width && parseLength(width[2])\n  };\n}\nfunction calculateByDimensions(attrs) {\n  return {\n    height: attrs.height,\n    width: attrs.width\n  };\n}\nfunction calculateByViewbox(attrs, viewbox) {\n  const ratio = viewbox.width / viewbox.height;\n  if (attrs.width) {\n    return {\n      height: Math.floor(attrs.width / ratio),\n      width: attrs.width\n    };\n  }\n  if (attrs.height) {\n    return {\n      height: attrs.height,\n      width: Math.floor(attrs.height * ratio)\n    };\n  }\n  return {\n    height: viewbox.height,\n    width: viewbox.width\n  };\n}\nconst SVG = {\n  // Scan only the first kilo-byte to speed up the check on larger files\n  validate: (input) => svgReg.test(toUTF8String(input, 0, 1e3)),\n  calculate(input) {\n    const root = extractorRegExps.root.exec(toUTF8String(input));\n    if (root) {\n      const attrs = parseAttributes(root[0]);\n      if (attrs.width && attrs.height) {\n        return calculateByDimensions(attrs);\n      }\n      if (attrs.viewbox) {\n        return calculateByViewbox(attrs, attrs.viewbox);\n      }\n    }\n    throw new TypeError(\"Invalid SVG\");\n  }\n};\nexport {\n  SVG\n};\n","import { readUInt16LE } from \"./utils.js\";\nconst TGA = {\n  validate(input) {\n    return readUInt16LE(input, 0) === 0 && readUInt16LE(input, 4) === 0;\n  },\n  calculate(input) {\n    return {\n      height: readUInt16LE(input, 14),\n      width: readUInt16LE(input, 12)\n    };\n  }\n};\nexport {\n  TGA\n};\n","import { readUInt, toHexString, toUTF8String } from \"./utils.js\";\nfunction readIFD(input, isBigEndian) {\n  const ifdOffset = readUInt(input, 32, 4, isBigEndian);\n  return input.slice(ifdOffset + 2);\n}\nfunction readValue(input, isBigEndian) {\n  const low = readUInt(input, 16, 8, isBigEndian);\n  const high = readUInt(input, 16, 10, isBigEndian);\n  return (high << 16) + low;\n}\nfunction nextTag(input) {\n  if (input.length > 24) {\n    return input.slice(12);\n  }\n}\nfunction extractTags(input, isBigEndian) {\n  const tags = {};\n  let temp = input;\n  while (temp && temp.length) {\n    const code = readUInt(temp, 16, 0, isBigEndian);\n    const type = readUInt(temp, 16, 2, isBigEndian);\n    const length = readUInt(temp, 32, 4, isBigEndian);\n    if (code === 0) {\n      break;\n    } else {\n      if (length === 1 && (type === 3 || type === 4)) {\n        tags[code] = readValue(temp, isBigEndian);\n      }\n      temp = nextTag(temp);\n    }\n  }\n  return tags;\n}\nfunction determineEndianness(input) {\n  const signature = toUTF8String(input, 0, 2);\n  if (\"II\" === signature) {\n    return \"LE\";\n  } else if (\"MM\" === signature) {\n    return \"BE\";\n  }\n}\nconst signatures = [\n  // '492049', // currently not supported\n  \"49492a00\",\n  // Little endian\n  \"4d4d002a\"\n  // Big Endian\n  // '4d4d002a', // BigTIFF > 4GB. currently not supported\n];\nconst TIFF = {\n  validate: (input) => signatures.includes(toHexString(input, 0, 4)),\n  calculate(input) {\n    const isBigEndian = determineEndianness(input) === \"BE\";\n    const ifdBuffer = readIFD(input, isBigEndian);\n    const tags = extractTags(ifdBuffer, isBigEndian);\n    const width = tags[256];\n    const height = tags[257];\n    if (!width || !height) {\n      throw new TypeError(\"Invalid Tiff. Missing tags\");\n    }\n    return { height, width };\n  }\n};\nexport {\n  TIFF\n};\n","import { toHexString, toUTF8String, readInt16LE, readUInt24LE } from \"./utils.js\";\nfunction calculateExtended(input) {\n  return {\n    height: 1 + readUInt24LE(input, 7),\n    width: 1 + readUInt24LE(input, 4)\n  };\n}\nfunction calculateLossless(input) {\n  return {\n    height: 1 + ((input[4] & 15) << 10 | input[3] << 2 | (input[2] & 192) >> 6),\n    width: 1 + ((input[2] & 63) << 8 | input[1])\n  };\n}\nfunction calculateLossy(input) {\n  return {\n    height: readInt16LE(input, 8) & 16383,\n    width: readInt16LE(input, 6) & 16383\n  };\n}\nconst WEBP = {\n  validate(input) {\n    const riffHeader = \"RIFF\" === toUTF8String(input, 0, 4);\n    const webpHeader = \"WEBP\" === toUTF8String(input, 8, 12);\n    const vp8Header = \"VP8\" === toUTF8String(input, 12, 15);\n    return riffHeader && webpHeader && vp8Header;\n  },\n  calculate(input) {\n    const chunkHeader = toUTF8String(input, 12, 16);\n    input = input.slice(20, 30);\n    if (chunkHeader === \"VP8X\") {\n      const extendedHeader = input[0];\n      const validStart = (extendedHeader & 192) === 0;\n      const validEnd = (extendedHeader & 1) === 0;\n      if (validStart && validEnd) {\n        return calculateExtended(input);\n      } else {\n        throw new TypeError(\"Invalid WebP\");\n      }\n    }\n    if (chunkHeader === \"VP8 \" && input[0] !== 47) {\n      return calculateLossy(input);\n    }\n    const signature = toHexString(input, 3, 6);\n    if (chunkHeader === \"VP8L\" && signature !== \"9d012a\") {\n      return calculateLossless(input);\n    }\n    throw new TypeError(\"Invalid WebP\");\n  }\n};\nexport {\n  WEBP\n};\n","import { BMP } from \"./bmp.js\";\nimport { CUR } from \"./cur.js\";\nimport { DDS } from \"./dds.js\";\nimport { GIF } from \"./gif.js\";\nimport { HEIF } from \"./heif.js\";\nimport { ICNS } from \"./icns.js\";\nimport { ICO } from \"./ico.js\";\nimport { J2C } from \"./j2c.js\";\nimport { JP2 } from \"./jp2.js\";\nimport { JPG } from \"./jpg.js\";\nimport { KTX } from \"./ktx.js\";\nimport { PNG } from \"./png.js\";\nimport { PNM } from \"./pnm.js\";\nimport { PSD } from \"./psd.js\";\nimport { SVG } from \"./svg.js\";\nimport { TGA } from \"./tga.js\";\nimport { TIFF } from \"./tiff.js\";\nimport { WEBP } from \"./webp.js\";\nconst typeHandlers = /* @__PURE__ */ new Map([\n  [\"bmp\", BMP],\n  [\"cur\", CUR],\n  [\"dds\", DDS],\n  [\"gif\", GIF],\n  [\"heif\", HEIF],\n  [\"icns\", ICNS],\n  [\"ico\", ICO],\n  [\"j2c\", J2C],\n  [\"jp2\", JP2],\n  [\"jpg\", JPG],\n  [\"ktx\", KTX],\n  [\"png\", PNG],\n  [\"pnm\", PNM],\n  [\"psd\", PSD],\n  [\"svg\", SVG],\n  [\"tga\", TGA],\n  [\"tiff\", TIFF],\n  [\"webp\", WEBP]\n]);\nconst types = Array.from(typeHandlers.keys());\nexport {\n  typeHandlers,\n  types\n};\n"],"names":["SIZE_HEADER","getImageSize"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]}