{"version":3,"file":"generic_DwuqZlsG.mjs","sources":["../../../node_modules/astro/dist/assets/consts.js","../../../node_modules/astro/dist/assets/layout.js","../../../node_modules/@astrojs/internal-helpers/dist/remote.js","../../../node_modules/astro/dist/assets/utils/imageKind.js","../../../node_modules/astro/dist/assets/services/service.js","../../../node_modules/astro/dist/assets/types.js","../../../node_modules/astro/dist/assets/utils/imageAttributes.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/detector.js","../../../node_modules/astro/dist/assets/utils/vendor/image-size/lookup.js","../../../node_modules/astro/dist/assets/utils/metadata.js","../../../node_modules/astro/dist/assets/utils/remoteProbe.js","../../../node_modules/astro/dist/assets/internal.js","../../../node_modules/astro/components/Image.astro","../../../node_modules/astro/components/Picture.astro","../../../node_modules/astro/components/Font.astro","../../../node_modules/astro/dist/assets/utils/etag.js","../../../node_modules/astro/dist/assets/endpoint/generic.js"],"sourcesContent":["const VIRTUAL_MODULE_ID = \"astro:assets\";\nconst VIRTUAL_SERVICE_ID = \"virtual:image-service\";\nconst VALID_INPUT_FORMATS = [\n  \"jpeg\",\n  \"jpg\",\n  \"png\",\n  \"tiff\",\n  \"webp\",\n  \"gif\",\n  \"svg\",\n  \"avif\"\n];\nconst VALID_SUPPORTED_FORMATS = [\n  \"jpeg\",\n  \"jpg\",\n  \"png\",\n  \"tiff\",\n  \"webp\",\n  \"gif\",\n  \"svg\",\n  \"avif\"\n];\nconst DEFAULT_OUTPUT_FORMAT = \"webp\";\nconst VALID_OUTPUT_FORMATS = [\"avif\", \"png\", \"webp\", \"jpeg\", \"jpg\", \"svg\"];\nconst DEFAULT_HASH_PROPS = [\n  \"src\",\n  \"width\",\n  \"height\",\n  \"format\",\n  \"quality\",\n  \"fit\",\n  \"position\"\n];\nexport {\n  DEFAULT_HASH_PROPS,\n  DEFAULT_OUTPUT_FORMAT,\n  VALID_INPUT_FORMATS,\n  VALID_OUTPUT_FORMATS,\n  VALID_SUPPORTED_FORMATS,\n  VIRTUAL_MODULE_ID,\n  VIRTUAL_SERVICE_ID\n};\n","const DEFAULT_RESOLUTIONS = [\n  640,\n  // older and lower-end phones\n  750,\n  // iPhone 6-8\n  828,\n  // iPhone XR/11\n  960,\n  // older horizontal phones\n  1080,\n  // iPhone 6-8 Plus\n  1280,\n  // 720p\n  1668,\n  // Various iPads\n  1920,\n  // 1080p\n  2048,\n  // QXGA\n  2560,\n  // WQXGA\n  3200,\n  // QHD+\n  3840,\n  // 4K\n  4480,\n  // 4.5K\n  5120,\n  // 5K\n  6016\n  // 6K\n];\nconst LIMITED_RESOLUTIONS = [\n  640,\n  // older and lower-end phones\n  750,\n  // iPhone 6-8\n  828,\n  // iPhone XR/11\n  1080,\n  // iPhone 6-8 Plus\n  1280,\n  // 720p\n  1668,\n  // Various iPads\n  2048,\n  // QXGA\n  2560\n  // WQXGA\n];\nconst getWidths = ({\n  width,\n  layout,\n  breakpoints = DEFAULT_RESOLUTIONS,\n  originalWidth\n}) => {\n  const smallerThanOriginal = (w) => !originalWidth || w <= originalWidth;\n  if (layout === \"full-width\") {\n    return breakpoints.filter(smallerThanOriginal);\n  }\n  if (!width) {\n    return [];\n  }\n  const doubleWidth = width * 2;\n  const maxSize = originalWidth ? Math.min(doubleWidth, originalWidth) : doubleWidth;\n  if (layout === \"fixed\") {\n    return originalWidth && width > originalWidth ? [originalWidth] : [width, maxSize];\n  }\n  if (layout === \"constrained\") {\n    return [\n      // Always include the image at 1x and 2x the specified width\n      width,\n      doubleWidth,\n      ...breakpoints\n    ].filter((w) => w <= maxSize).sort((a, b) => a - b);\n  }\n  return [];\n};\nconst getSizesAttribute = ({\n  width,\n  layout\n}) => {\n  if (!width || !layout) {\n    return void 0;\n  }\n  switch (layout) {\n    // If screen is wider than the max size then image width is the max size,\n    // otherwise it's the width of the screen\n    case \"constrained\":\n      return `(min-width: ${width}px) ${width}px, 100vw`;\n    // Image is always the same width, whatever the size of the screen\n    case \"fixed\":\n      return `${width}px`;\n    // Image is always the width of the screen\n    case \"full-width\":\n      return `100vw`;\n    case \"none\":\n    default:\n      return void 0;\n  }\n};\nexport {\n  DEFAULT_RESOLUTIONS,\n  LIMITED_RESOLUTIONS,\n  getSizesAttribute,\n  getWidths\n};\n","function matchPattern(url, remotePattern) {\n  return matchProtocol(url, remotePattern.protocol) && matchHostname(url, remotePattern.hostname, true) && matchPort(url, remotePattern.port) && matchPathname(url, remotePattern.pathname, true);\n}\nfunction matchPort(url, port) {\n  return !port || port === url.port;\n}\nfunction matchProtocol(url, protocol) {\n  return !protocol || protocol === url.protocol.slice(0, -1);\n}\nfunction matchHostname(url, hostname, allowWildcard = false) {\n  if (!hostname) {\n    return true;\n  } else if (!allowWildcard || !hostname.startsWith(\"*\")) {\n    return hostname === url.hostname;\n  } else if (hostname.startsWith(\"**.\")) {\n    const slicedHostname = hostname.slice(2);\n    return slicedHostname !== url.hostname && url.hostname.endsWith(slicedHostname);\n  } else if (hostname.startsWith(\"*.\")) {\n    const slicedHostname = hostname.slice(1);\n    const additionalSubdomains = url.hostname.replace(slicedHostname, \"\").split(\".\").filter(Boolean);\n    return additionalSubdomains.length === 1;\n  }\n  return false;\n}\nfunction matchPathname(url, pathname, allowWildcard = false) {\n  if (!pathname) {\n    return true;\n  } else if (!allowWildcard || !pathname.endsWith(\"*\")) {\n    return pathname === url.pathname;\n  } else if (pathname.endsWith(\"/**\")) {\n    const slicedPathname = pathname.slice(0, -2);\n    return slicedPathname !== url.pathname && url.pathname.startsWith(slicedPathname);\n  } else if (pathname.endsWith(\"/*\")) {\n    const slicedPathname = pathname.slice(0, -1);\n    const additionalPathChunks = url.pathname.replace(slicedPathname, \"\").split(\"/\").filter(Boolean);\n    return additionalPathChunks.length === 1;\n  }\n  return false;\n}\nfunction isRemoteAllowed(src, {\n  domains,\n  remotePatterns\n}) {\n  if (!URL.canParse(src)) {\n    return false;\n  }\n  const url = new URL(src);\n  return domains.some((domain) => matchHostname(url, domain)) || remotePatterns.some((remotePattern) => matchPattern(url, remotePattern));\n}\nexport {\n  isRemoteAllowed,\n  matchHostname,\n  matchPathname,\n  matchPattern,\n  matchPort,\n  matchProtocol\n};\n","function isESMImportedImage(src) {\n  return typeof src === \"object\" || typeof src === \"function\" && \"src\" in src;\n}\nfunction isRemoteImage(src) {\n  return typeof src === \"string\";\n}\nasync function resolveSrc(src) {\n  if (typeof src === \"object\" && \"then\" in src) {\n    const resource = await src;\n    return resource.default ?? resource;\n  }\n  return src;\n}\nexport {\n  isESMImportedImage,\n  isRemoteImage,\n  resolveSrc\n};\n","import { isRemoteAllowed } from \"@astrojs/internal-helpers/remote\";\nimport { AstroError, AstroErrorData } from \"../../core/errors/index.js\";\nimport { isRemotePath, joinPaths } from \"../../core/path.js\";\nimport { DEFAULT_HASH_PROPS, DEFAULT_OUTPUT_FORMAT, VALID_SUPPORTED_FORMATS } from \"../consts.js\";\nimport { isESMImportedImage, isRemoteImage } from \"../utils/imageKind.js\";\nfunction isLocalService(service) {\n  if (!service) {\n    return false;\n  }\n  return \"transform\" in service;\n}\nfunction parseQuality(quality) {\n  let result = parseInt(quality);\n  if (Number.isNaN(result)) {\n    return quality;\n  }\n  return result;\n}\nconst sortNumeric = (a, b) => a - b;\nconst baseService = {\n  propertiesToHash: DEFAULT_HASH_PROPS,\n  validateOptions(options) {\n    if (!options.src || !isRemoteImage(options.src) && !isESMImportedImage(options.src)) {\n      throw new AstroError({\n        ...AstroErrorData.ExpectedImage,\n        message: AstroErrorData.ExpectedImage.message(\n          JSON.stringify(options.src),\n          typeof options.src,\n          JSON.stringify(options, (_, v) => v === void 0 ? null : v)\n        )\n      });\n    }\n    if (!isESMImportedImage(options.src)) {\n      if (options.src.startsWith(\"/@fs/\") || !isRemotePath(options.src) && !options.src.startsWith(\"/\")) {\n        throw new AstroError({\n          ...AstroErrorData.LocalImageUsedWrongly,\n          message: AstroErrorData.LocalImageUsedWrongly.message(options.src)\n        });\n      }\n      let missingDimension;\n      if (!options.width && !options.height) {\n        missingDimension = \"both\";\n      } else if (!options.width && options.height) {\n        missingDimension = \"width\";\n      } else if (options.width && !options.height) {\n        missingDimension = \"height\";\n      }\n      if (missingDimension) {\n        throw new AstroError({\n          ...AstroErrorData.MissingImageDimension,\n          message: AstroErrorData.MissingImageDimension.message(missingDimension, options.src)\n        });\n      }\n    } else {\n      if (!VALID_SUPPORTED_FORMATS.includes(options.src.format)) {\n        throw new AstroError({\n          ...AstroErrorData.UnsupportedImageFormat,\n          message: AstroErrorData.UnsupportedImageFormat.message(\n            options.src.format,\n            options.src.src,\n            VALID_SUPPORTED_FORMATS\n          )\n        });\n      }\n      if (options.widths && options.densities) {\n        throw new AstroError(AstroErrorData.IncompatibleDescriptorOptions);\n      }\n      if (options.src.format === \"svg\") {\n        options.format = \"svg\";\n      }\n      if (options.src.format === \"svg\" && options.format !== \"svg\" || options.src.format !== \"svg\" && options.format === \"svg\") {\n        throw new AstroError(AstroErrorData.UnsupportedImageConversion);\n      }\n    }\n    if (!options.format) {\n      options.format = DEFAULT_OUTPUT_FORMAT;\n    }\n    if (options.width) options.width = Math.round(options.width);\n    if (options.height) options.height = Math.round(options.height);\n    if (options.layout && options.width && options.height) {\n      options.fit ??= \"cover\";\n      delete options.layout;\n    }\n    if (options.fit === \"none\") {\n      delete options.fit;\n    }\n    return options;\n  },\n  getHTMLAttributes(options) {\n    const { targetWidth, targetHeight } = getTargetDimensions(options);\n    const {\n      src,\n      width,\n      height,\n      format,\n      quality,\n      densities,\n      widths,\n      formats,\n      layout,\n      priority,\n      fit,\n      position,\n      ...attributes\n    } = options;\n    return {\n      ...attributes,\n      width: targetWidth,\n      height: targetHeight,\n      loading: attributes.loading ?? \"lazy\",\n      decoding: attributes.decoding ?? \"async\"\n    };\n  },\n  getSrcSet(options) {\n    const { targetWidth, targetHeight } = getTargetDimensions(options);\n    const aspectRatio = targetWidth / targetHeight;\n    const { widths, densities } = options;\n    const targetFormat = options.format ?? DEFAULT_OUTPUT_FORMAT;\n    let transformedWidths = (widths ?? []).sort(sortNumeric);\n    let imageWidth = options.width;\n    let maxWidth = Infinity;\n    if (isESMImportedImage(options.src)) {\n      imageWidth = options.src.width;\n      maxWidth = imageWidth;\n      if (transformedWidths.length > 0 && transformedWidths.at(-1) > maxWidth) {\n        transformedWidths = transformedWidths.filter((width) => width <= maxWidth);\n        transformedWidths.push(maxWidth);\n      }\n    }\n    transformedWidths = Array.from(new Set(transformedWidths));\n    const {\n      width: transformWidth,\n      height: transformHeight,\n      ...transformWithoutDimensions\n    } = options;\n    let allWidths = [];\n    if (densities) {\n      const densityValues = densities.map((density) => {\n        if (typeof density === \"number\") {\n          return density;\n        } else {\n          return parseFloat(density);\n        }\n      });\n      const densityWidths = densityValues.sort(sortNumeric).map((density) => Math.round(targetWidth * density));\n      allWidths = densityWidths.map((width, index) => ({\n        width,\n        descriptor: `${densityValues[index]}x`\n      }));\n    } else if (transformedWidths.length > 0) {\n      allWidths = transformedWidths.map((width) => ({\n        width,\n        descriptor: `${width}w`\n      }));\n    }\n    return allWidths.map(({ width, descriptor }) => {\n      const height = Math.round(width / aspectRatio);\n      const transform = { ...transformWithoutDimensions, width, height };\n      return {\n        transform,\n        descriptor,\n        attributes: {\n          type: `image/${targetFormat}`\n        }\n      };\n    });\n  },\n  getURL(options, imageConfig) {\n    const searchParams = new URLSearchParams();\n    if (isESMImportedImage(options.src)) {\n      searchParams.append(\"href\", options.src.src);\n    } else if (isRemoteAllowed(options.src, imageConfig)) {\n      searchParams.append(\"href\", options.src);\n    } else {\n      return options.src;\n    }\n    const params = {\n      w: \"width\",\n      h: \"height\",\n      q: \"quality\",\n      f: \"format\",\n      fit: \"fit\",\n      position: \"position\"\n    };\n    Object.entries(params).forEach(([param, key]) => {\n      options[key] && searchParams.append(param, options[key].toString());\n    });\n    const imageEndpoint = joinPaths(import.meta.env.BASE_URL, imageConfig.endpoint.route);\n    return `${imageEndpoint}?${searchParams}`;\n  },\n  parseURL(url) {\n    const params = url.searchParams;\n    if (!params.has(\"href\")) {\n      return void 0;\n    }\n    const transform = {\n      src: params.get(\"href\"),\n      width: params.has(\"w\") ? parseInt(params.get(\"w\")) : void 0,\n      height: params.has(\"h\") ? parseInt(params.get(\"h\")) : void 0,\n      format: params.get(\"f\"),\n      quality: params.get(\"q\"),\n      fit: params.get(\"fit\"),\n      position: params.get(\"position\") ?? void 0\n    };\n    return transform;\n  }\n};\nfunction getTargetDimensions(options) {\n  let targetWidth = options.width;\n  let targetHeight = options.height;\n  if (isESMImportedImage(options.src)) {\n    const aspectRatio = options.src.width / options.src.height;\n    if (targetHeight && !targetWidth) {\n      targetWidth = Math.round(targetHeight * aspectRatio);\n    } else if (targetWidth && !targetHeight) {\n      targetHeight = Math.round(targetWidth / aspectRatio);\n    } else if (!targetWidth && !targetHeight) {\n      targetWidth = options.src.width;\n      targetHeight = options.src.height;\n    }\n  }\n  return {\n    targetWidth,\n    targetHeight\n  };\n}\nexport {\n  baseService,\n  isLocalService,\n  parseQuality\n};\n","const isESMImport = Symbol(\"#isESM\");\nfunction isImageMetadata(src) {\n  return src.fsPath && !(\"fsPath\" in src);\n}\nexport {\n  isImageMetadata\n};\n","import { toStyleString } from \"../../runtime/server/render/util.js\";\nconst cssFitValues = [\"fill\", \"contain\", \"cover\", \"scale-down\"];\nfunction addCSSVarsToStyle(vars, styles) {\n  const cssVars = Object.entries(vars).filter(([_, value]) => value !== void 0 && value !== false).map(([key, value]) => `--${key}: ${value};`).join(\" \");\n  if (!styles) {\n    return cssVars;\n  }\n  const style = typeof styles === \"string\" ? styles : toStyleString(styles);\n  return `${cssVars} ${style}`;\n}\nexport {\n  addCSSVarsToStyle,\n  cssFitValues\n};\n","import { typeHandlers, types } from \"./types/index.js\";\nconst firstBytes = /* @__PURE__ */ new Map([\n  [56, \"psd\"],\n  [66, \"bmp\"],\n  [68, \"dds\"],\n  [71, \"gif\"],\n  [73, \"tiff\"],\n  [77, \"tiff\"],\n  [82, \"webp\"],\n  [105, \"icns\"],\n  [137, \"png\"],\n  [255, \"jpg\"]\n]);\nfunction detector(input) {\n  const byte = input[0];\n  const type = firstBytes.get(byte);\n  if (type && typeHandlers.get(type).validate(input)) {\n    return type;\n  }\n  return types.find((fileType) => typeHandlers.get(fileType).validate(input));\n}\nexport {\n  detector\n};\n","import { typeHandlers } from \"./types/index.js\";\nimport { detector } from \"./detector.js\";\nfunction lookup(input) {\n  const type = detector(input);\n  if (typeof type !== \"undefined\") {\n    const size = typeHandlers.get(type).calculate(input);\n    if (size !== void 0) {\n      size.type = size.type ?? type;\n      return size;\n    }\n  }\n  throw new TypeError(\"unsupported file type: \" + type);\n}\nexport {\n  lookup\n};\n","import { AstroError, AstroErrorData } from \"../../core/errors/index.js\";\nimport { lookup as probe } from \"../utils/vendor/image-size/lookup.js\";\nasync function imageMetadata(data, src) {\n  let result;\n  try {\n    result = probe(data);\n  } catch {\n    throw new AstroError({\n      ...AstroErrorData.NoImageMetadata,\n      message: AstroErrorData.NoImageMetadata.message(src)\n    });\n  }\n  if (!result.height || !result.width || !result.type) {\n    throw new AstroError({\n      ...AstroErrorData.NoImageMetadata,\n      message: AstroErrorData.NoImageMetadata.message(src)\n    });\n  }\n  const { width, height, type, orientation } = result;\n  const isPortrait = (orientation || 0) >= 5;\n  return {\n    width: isPortrait ? height : width,\n    height: isPortrait ? width : height,\n    format: type,\n    orientation\n  };\n}\nexport {\n  imageMetadata\n};\n","import { AstroError, AstroErrorData } from \"../../core/errors/index.js\";\nimport { imageMetadata } from \"./metadata.js\";\nasync function inferRemoteSize(url) {\n  const response = await fetch(url);\n  if (!response.body || !response.ok) {\n    throw new AstroError({\n      ...AstroErrorData.FailedToFetchRemoteImageDimensions,\n      message: AstroErrorData.FailedToFetchRemoteImageDimensions.message(url)\n    });\n  }\n  const reader = response.body.getReader();\n  let done, value;\n  let accumulatedChunks = new Uint8Array();\n  while (!done) {\n    const readResult = await reader.read();\n    done = readResult.done;\n    if (done) break;\n    if (readResult.value) {\n      value = readResult.value;\n      let tmp = new Uint8Array(accumulatedChunks.length + value.length);\n      tmp.set(accumulatedChunks, 0);\n      tmp.set(value, accumulatedChunks.length);\n      accumulatedChunks = tmp;\n      try {\n        const dimensions = await imageMetadata(accumulatedChunks, url);\n        if (dimensions) {\n          await reader.cancel();\n          return dimensions;\n        }\n      } catch {\n      }\n    }\n  }\n  throw new AstroError({\n    ...AstroErrorData.NoImageMetadata,\n    message: AstroErrorData.NoImageMetadata.message(url)\n  });\n}\nexport {\n  inferRemoteSize\n};\n","import { isRemotePath } from \"@astrojs/internal-helpers/path\";\nimport { AstroError, AstroErrorData } from \"../core/errors/index.js\";\nimport { DEFAULT_HASH_PROPS } from \"./consts.js\";\nimport {\n  DEFAULT_RESOLUTIONS,\n  getSizesAttribute,\n  getWidths,\n  LIMITED_RESOLUTIONS\n} from \"./layout.js\";\nimport { isLocalService } from \"./services/service.js\";\nimport {\n  isImageMetadata\n} from \"./types.js\";\nimport { addCSSVarsToStyle, cssFitValues } from \"./utils/imageAttributes.js\";\nimport { isESMImportedImage, isRemoteImage, resolveSrc } from \"./utils/imageKind.js\";\nimport { inferRemoteSize } from \"./utils/remoteProbe.js\";\nasync function getConfiguredImageService() {\n  if (!globalThis?.astroAsset?.imageService) {\n    const { default: service } = await import(\n      // @ts-expect-error\n      \"virtual:image-service\"\n    ).catch((e) => {\n      const error = new AstroError(AstroErrorData.InvalidImageService);\n      error.cause = e;\n      throw error;\n    });\n    if (!globalThis.astroAsset) globalThis.astroAsset = {};\n    globalThis.astroAsset.imageService = service;\n    return service;\n  }\n  return globalThis.astroAsset.imageService;\n}\nasync function getImage(options, imageConfig) {\n  if (!options || typeof options !== \"object\") {\n    throw new AstroError({\n      ...AstroErrorData.ExpectedImageOptions,\n      message: AstroErrorData.ExpectedImageOptions.message(JSON.stringify(options))\n    });\n  }\n  if (typeof options.src === \"undefined\") {\n    throw new AstroError({\n      ...AstroErrorData.ExpectedImage,\n      message: AstroErrorData.ExpectedImage.message(\n        options.src,\n        \"undefined\",\n        JSON.stringify(options)\n      )\n    });\n  }\n  if (isImageMetadata(options)) {\n    throw new AstroError(AstroErrorData.ExpectedNotESMImage);\n  }\n  const service = await getConfiguredImageService();\n  const resolvedOptions = {\n    ...options,\n    src: await resolveSrc(options.src)\n  };\n  let originalWidth;\n  let originalHeight;\n  if (options.inferSize && isRemoteImage(resolvedOptions.src) && isRemotePath(resolvedOptions.src)) {\n    const result = await inferRemoteSize(resolvedOptions.src);\n    resolvedOptions.width ??= result.width;\n    resolvedOptions.height ??= result.height;\n    originalWidth = result.width;\n    originalHeight = result.height;\n    delete resolvedOptions.inferSize;\n  }\n  const originalFilePath = isESMImportedImage(resolvedOptions.src) ? resolvedOptions.src.fsPath : void 0;\n  const clonedSrc = isESMImportedImage(resolvedOptions.src) ? (\n    // @ts-expect-error - clone is a private, hidden prop\n    resolvedOptions.src.clone ?? resolvedOptions.src\n  ) : resolvedOptions.src;\n  if (isESMImportedImage(clonedSrc)) {\n    originalWidth = clonedSrc.width;\n    originalHeight = clonedSrc.height;\n  }\n  if (originalWidth && originalHeight) {\n    const aspectRatio = originalWidth / originalHeight;\n    if (resolvedOptions.height && !resolvedOptions.width) {\n      resolvedOptions.width = Math.round(resolvedOptions.height * aspectRatio);\n    } else if (resolvedOptions.width && !resolvedOptions.height) {\n      resolvedOptions.height = Math.round(resolvedOptions.width / aspectRatio);\n    } else if (!resolvedOptions.width && !resolvedOptions.height) {\n      resolvedOptions.width = originalWidth;\n      resolvedOptions.height = originalHeight;\n    }\n  }\n  resolvedOptions.src = clonedSrc;\n  const layout = options.layout ?? imageConfig.layout ?? \"none\";\n  if (resolvedOptions.priority) {\n    resolvedOptions.loading ??= \"eager\";\n    resolvedOptions.decoding ??= \"sync\";\n    resolvedOptions.fetchpriority ??= \"high\";\n    delete resolvedOptions.priority;\n  } else {\n    resolvedOptions.loading ??= \"lazy\";\n    resolvedOptions.decoding ??= \"async\";\n    resolvedOptions.fetchpriority ??= \"auto\";\n  }\n  if (layout !== \"none\") {\n    resolvedOptions.widths ||= getWidths({\n      width: resolvedOptions.width,\n      layout,\n      originalWidth,\n      breakpoints: imageConfig.breakpoints?.length ? imageConfig.breakpoints : isLocalService(service) ? LIMITED_RESOLUTIONS : DEFAULT_RESOLUTIONS\n    });\n    resolvedOptions.sizes ||= getSizesAttribute({ width: resolvedOptions.width, layout });\n    delete resolvedOptions.densities;\n    resolvedOptions.style = addCSSVarsToStyle(\n      {\n        fit: cssFitValues.includes(resolvedOptions.fit ?? \"\") && resolvedOptions.fit,\n        pos: resolvedOptions.position\n      },\n      resolvedOptions.style\n    );\n    resolvedOptions[\"data-astro-image\"] = layout;\n  }\n  const validatedOptions = service.validateOptions ? await service.validateOptions(resolvedOptions, imageConfig) : resolvedOptions;\n  const srcSetTransforms = service.getSrcSet ? await service.getSrcSet(validatedOptions, imageConfig) : [];\n  let imageURL = await service.getURL(validatedOptions, imageConfig);\n  const matchesValidatedTransform = (transform) => transform.width === validatedOptions.width && transform.height === validatedOptions.height && transform.format === validatedOptions.format;\n  let srcSets = await Promise.all(\n    srcSetTransforms.map(async (srcSet) => {\n      return {\n        transform: srcSet.transform,\n        url: matchesValidatedTransform(srcSet.transform) ? imageURL : await service.getURL(srcSet.transform, imageConfig),\n        descriptor: srcSet.descriptor,\n        attributes: srcSet.attributes\n      };\n    })\n  );\n  if (isLocalService(service) && globalThis.astroAsset.addStaticImage && !(isRemoteImage(validatedOptions.src) && imageURL === validatedOptions.src)) {\n    const propsToHash = service.propertiesToHash ?? DEFAULT_HASH_PROPS;\n    imageURL = globalThis.astroAsset.addStaticImage(\n      validatedOptions,\n      propsToHash,\n      originalFilePath\n    );\n    srcSets = srcSetTransforms.map((srcSet) => {\n      return {\n        transform: srcSet.transform,\n        url: matchesValidatedTransform(srcSet.transform) ? imageURL : globalThis.astroAsset.addStaticImage(srcSet.transform, propsToHash, originalFilePath),\n        descriptor: srcSet.descriptor,\n        attributes: srcSet.attributes\n      };\n    });\n  }\n  return {\n    rawOptions: resolvedOptions,\n    options: validatedOptions,\n    src: imageURL,\n    srcSet: {\n      values: srcSets,\n      attribute: srcSets.map((srcSet) => `${srcSet.url} ${srcSet.descriptor}`).join(\", \")\n    },\n    attributes: service.getHTMLAttributes !== void 0 ? await service.getHTMLAttributes(validatedOptions, imageConfig) : {}\n  };\n}\nexport {\n  getConfiguredImageService,\n  getImage\n};\n","---\nimport { getImage, imageConfig, type LocalImageProps, type RemoteImageProps } from 'astro:assets';\nimport type { UnresolvedImageTransform } from '../dist/assets/types';\nimport { AstroError, AstroErrorData } from '../dist/core/errors/index.js';\nimport type { HTMLAttributes } from '../types';\n\n// The TypeScript diagnostic for JSX props uses the last member of the union to suggest props, so it would be better for\n// LocalImageProps to be last. Unfortunately, when we do this the error messages that remote images get are complete nonsense\n// Not 100% sure how to fix this, seems to be a TypeScript issue. Unfortunate.\ntype Props = LocalImageProps | RemoteImageProps;\n\nconst props = Astro.props;\n\nif (props.alt === undefined || props.alt === null) {\n\tthrow new AstroError(AstroErrorData.ImageMissingAlt);\n}\n\n// As a convenience, allow width and height to be string with a number in them, to match HTML's native `img`.\nif (typeof props.width === 'string') {\n\tprops.width = parseInt(props.width);\n}\n\nif (typeof props.height === 'string') {\n\tprops.height = parseInt(props.height);\n}\n\nconst layout = props.layout ?? imageConfig.layout ?? 'none';\n\nif (layout !== 'none') {\n\t// Apply defaults from imageConfig if not provided\n\tprops.layout ??= imageConfig.layout;\n\tprops.fit ??= imageConfig.objectFit ?? 'cover';\n\tprops.position ??= imageConfig.objectPosition ?? 'center';\n}\n\nconst image = await getImage(props as UnresolvedImageTransform);\n\nconst additionalAttributes: HTMLAttributes<'img'> = {};\nif (image.srcSet.values.length > 0) {\n\tadditionalAttributes.srcset = image.srcSet.attribute;\n}\n\nif (import.meta.env.DEV) {\n\tadditionalAttributes['data-image-component'] = 'true';\n}\n\nconst { class: className, ...attributes } = { ...additionalAttributes, ...image.attributes };\n---\n\n{/* Applying class outside of the spread prevents it from applying unnecessary astro-* classes */}\n<img src={image.src} {...attributes} class={className} />\n","---\nimport { getImage, imageConfig, type LocalImageProps, type RemoteImageProps } from 'astro:assets';\nimport * as mime from 'mrmime';\nimport { isESMImportedImage, resolveSrc } from '../dist/assets/utils/imageKind.js';\nimport { AstroError, AstroErrorData } from '../dist/core/errors/index.js';\nimport type {\n\tGetImageResult,\n\tImageOutputFormat,\n\tUnresolvedImageTransform,\n} from '../dist/types/public/index.js';\nimport type { HTMLAttributes } from '../types';\n\nexport type Props = (LocalImageProps | RemoteImageProps) & {\n\tformats?: ImageOutputFormat[];\n\tfallbackFormat?: ImageOutputFormat;\n\tpictureAttributes?: HTMLAttributes<'picture'>;\n};\n\nconst defaultFormats = ['webp'] as const;\nconst defaultFallbackFormat = 'png' as const;\n\n// Certain formats don't want PNG fallbacks:\n// - GIF will typically want to stay as a gif, either for animation or for the lower amount of colors\n// - SVGs can't be converted to raster formats in most cases\n// - JPEGs compress photographs and high-noise images better than PNG in most cases\n// For those, we'll use the original format as the fallback instead.\nconst specialFormatsFallback = ['gif', 'svg', 'jpg', 'jpeg'] as const;\n\nconst { formats = defaultFormats, pictureAttributes = {}, fallbackFormat, ...props } = Astro.props;\n\nif (props.alt === undefined || props.alt === null) {\n\tthrow new AstroError(AstroErrorData.ImageMissingAlt);\n}\n\n// Picture attribute inherit scoped styles from class and attributes\nconst scopedStyleClass = props.class?.match(/\\bastro-\\w{8}\\b/)?.[0];\nif (scopedStyleClass) {\n\tif (pictureAttributes.class) {\n\t\tpictureAttributes.class = `${pictureAttributes.class} ${scopedStyleClass}`;\n\t} else {\n\t\tpictureAttributes.class = scopedStyleClass;\n\t}\n}\n\nconst layout = props.layout ?? imageConfig.layout ?? 'none';\nconst useResponsive = layout !== 'none';\n\nif (useResponsive) {\n\t// Apply defaults from imageConfig if not provided\n\tprops.layout ??= imageConfig.layout;\n\tprops.fit ??= imageConfig.objectFit ?? 'cover';\n\tprops.position ??= imageConfig.objectPosition ?? 'center';\n}\n\nfor (const key in props) {\n\tif (key.startsWith('data-astro-cid')) {\n\t\t// @ts-expect-error This is for island props so they're not properly typed\n\t\tpictureAttributes[key] = props[key];\n\t}\n}\n\nconst originalSrc = await resolveSrc(props.src);\nconst optimizedImages: GetImageResult[] = await Promise.all(\n\tformats.map(\n\t\tasync (format) =>\n\t\t\tawait getImage({\n\t\t\t\t...props,\n\t\t\t\tsrc: originalSrc,\n\t\t\t\tformat: format,\n\t\t\t\twidths: props.widths,\n\t\t\t\tdensities: props.densities,\n\t\t\t} as UnresolvedImageTransform),\n\t),\n);\n\nlet resultFallbackFormat = fallbackFormat ?? defaultFallbackFormat;\nif (\n\t!fallbackFormat &&\n\tisESMImportedImage(originalSrc) &&\n\t(specialFormatsFallback as ReadonlyArray<string>).includes(originalSrc.format)\n) {\n\tresultFallbackFormat = originalSrc.format;\n}\n\nconst fallbackImage = await getImage({\n\t...props,\n\tformat: resultFallbackFormat,\n\twidths: props.widths,\n\tdensities: props.densities,\n} as UnresolvedImageTransform);\n\nconst imgAdditionalAttributes: HTMLAttributes<'img'> = {};\nconst sourceAdditionalAttributes: HTMLAttributes<'source'> = {};\n\n// Propagate the `sizes` attribute to the `source` elements\nif (props.sizes) {\n\tsourceAdditionalAttributes.sizes = props.sizes;\n}\n\nif (fallbackImage.srcSet.values.length > 0) {\n\timgAdditionalAttributes.srcset = fallbackImage.srcSet.attribute;\n}\n\nif (import.meta.env.DEV) {\n\timgAdditionalAttributes['data-image-component'] = 'true';\n}\n\nconst { class: className, ...attributes } = {\n\t...imgAdditionalAttributes,\n\t...fallbackImage.attributes,\n};\n---\n\n<picture {...pictureAttributes}>\n\t{\n\t\tObject.entries(optimizedImages).map(([_, image]) => {\n\t\t\tconst srcsetAttribute =\n\t\t\t\tprops.densities || (!props.densities && !props.widths && !useResponsive)\n\t\t\t\t\t? `${image.src}${image.srcSet.values.length > 0 ? ', ' + image.srcSet.attribute : ''}`\n\t\t\t\t\t: image.srcSet.attribute;\n\t\t\treturn (\n\t\t\t\t<source\n\t\t\t\t\tsrcset={srcsetAttribute}\n\t\t\t\t\ttype={mime.lookup(image.options.format ?? image.src) ?? `image/${image.options.format}`}\n\t\t\t\t\t{...sourceAdditionalAttributes}\n\t\t\t\t/>\n\t\t\t);\n\t\t})\n\t}\n\t{/* Applying class outside of the spread prevents it from applying unnecessary astro-* classes */}\n\t<img src={fallbackImage.src} {...attributes} class={className} />\n</picture>\n","---\nimport * as mod from 'virtual:astro:assets/fonts/internal';\nimport { AstroError, AstroErrorData } from '../dist/core/errors/index.js';\n\n// TODO: remove check when fonts are stabilized\nconst { fontsData } = mod;\nif (!fontsData) {\n\tthrow new AstroError(AstroErrorData.ExperimentalFontsNotEnabled);\n}\n\ninterface Props {\n\t/** The `cssVariable` registered in your Astro configuration. */\n\tcssVariable: import('astro:assets').FontFamily;\n\t/** Whether it should output [preload links](https://web.dev/learn/performance/optimize-web-fonts#preload) or not. */\n\tpreload?: boolean;\n}\n\nconst { cssVariable, preload = false } = Astro.props as Props;\nconst data = fontsData.get(cssVariable);\nif (!data) {\n\tthrow new AstroError({\n\t\t...AstroErrorData.FontFamilyNotFound,\n\t\tmessage: AstroErrorData.FontFamilyNotFound.message(cssVariable),\n\t});\n}\n---\n\n{\n\tpreload &&\n\t\tdata.preloadData.map(({ url, type }) => (\n\t\t\t<link rel=\"preload\" href={url} as=\"font\" type={`font/${type}`} crossorigin />\n\t\t))\n}\n<style set:html={data.css}></style>\n","const fnv1a52 = (str) => {\n  const len = str.length;\n  let i = 0, t0 = 0, v0 = 8997, t1 = 0, v1 = 33826, t2 = 0, v2 = 40164, t3 = 0, v3 = 52210;\n  while (i < len) {\n    v0 ^= str.charCodeAt(i++);\n    t0 = v0 * 435;\n    t1 = v1 * 435;\n    t2 = v2 * 435;\n    t3 = v3 * 435;\n    t2 += v0 << 8;\n    t3 += v1 << 8;\n    t1 += t0 >>> 16;\n    v0 = t0 & 65535;\n    t2 += t1 >>> 16;\n    v1 = t1 & 65535;\n    v3 = t3 + (t2 >>> 16) & 65535;\n    v2 = t2 & 65535;\n  }\n  return (v3 & 15) * 281474976710656 + v2 * 4294967296 + v1 * 65536 + (v0 ^ v3 >> 4);\n};\nconst etag = (payload, weak = false) => {\n  const prefix = weak ? 'W/\"' : '\"';\n  return prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '\"';\n};\nexport {\n  etag\n};\n","import { imageConfig } from \"astro:assets\";\nimport { isRemotePath } from \"@astrojs/internal-helpers/path\";\nimport { isRemoteAllowed } from \"@astrojs/internal-helpers/remote\";\nimport * as mime from \"mrmime\";\nimport { getConfiguredImageService } from \"../internal.js\";\nimport { etag } from \"../utils/etag.js\";\nasync function loadRemoteImage(src, headers) {\n  try {\n    const res = await fetch(src, {\n      // Forward all headers from the original request\n      headers\n    });\n    if (!res.ok) {\n      return void 0;\n    }\n    return await res.arrayBuffer();\n  } catch {\n    return void 0;\n  }\n}\nconst GET = async ({ request }) => {\n  try {\n    const imageService = await getConfiguredImageService();\n    if (!(\"transform\" in imageService)) {\n      throw new Error(\"Configured image service is not a local service\");\n    }\n    const url = new URL(request.url);\n    const transform = await imageService.parseURL(url, imageConfig);\n    if (!transform?.src) {\n      throw new Error(\"Incorrect transform returned by `parseURL`\");\n    }\n    let inputBuffer = void 0;\n    const isRemoteImage = isRemotePath(transform.src);\n    const sourceUrl = isRemoteImage ? new URL(transform.src) : new URL(transform.src, url.origin);\n    if (isRemoteImage && isRemoteAllowed(transform.src, imageConfig) === false) {\n      return new Response(\"Forbidden\", { status: 403 });\n    }\n    inputBuffer = await loadRemoteImage(sourceUrl, isRemoteImage ? new Headers() : request.headers);\n    if (!inputBuffer) {\n      return new Response(\"Not Found\", { status: 404 });\n    }\n    const { data, format } = await imageService.transform(\n      new Uint8Array(inputBuffer),\n      transform,\n      imageConfig\n    );\n    return new Response(data, {\n      status: 200,\n      headers: {\n        \"Content-Type\": mime.lookup(format) ?? `image/${format}`,\n        \"Cache-Control\": \"public, max-age=31536000\",\n        ETag: etag(data.toString()),\n        Date: (/* @__PURE__ */ new Date()).toUTCString()\n      }\n    });\n  } catch (err) {\n    console.error(\"Could not process image request:\", err);\n    return new Response(`Server Error: ${err}`, { status: 500 });\n  }\n};\nexport {\n  GET\n};\n"],"names":["AstroErrorData.ExpectedImage","AstroErrorData.LocalImageUsedWrongly","AstroErrorData.MissingImageDimension","AstroErrorData.UnsupportedImageFormat","AstroErrorData.IncompatibleDescriptorOptions","AstroErrorData.UnsupportedImageConversion","probe","AstroErrorData.NoImageMetadata","AstroErrorData.FailedToFetchRemoteImageDimensions","AstroErrorData.InvalidImageService","getImage","AstroErrorData.ExpectedImageOptions","AstroErrorData.ExpectedNotESMImage","$$Astro","$$createAstro","$$createComponent","Astro","AstroErrorData.ImageMissingAlt","$$render","$$maybeRenderHead","$$addAttribute","$$spreadAttributes","AstroErrorData.ExperimentalFontsNotEnabled","AstroErrorData.FontFamilyNotFound","$$unescapeHTML"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}